{
  "version": 3,
  "sources": ["../src/Point.js", "../src/DotObject.js", "../src/FiniteLinearObject.js", "../src/InfiniteLinearObject.js", "../src/FiniteLinearSensor.js", "../src/CircularObject.js", "../src/DistanceConstraint.js", "../src/MoveableCircularObject.js", "../src/World.js", "../src/index.js"],
  "sourcesContent": ["function Point(x, y) { // H\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\nmodule.exports = Point;", "var Point = require(\"./Point\");\r\n\r\nfunction DotObject(param) { // B\r\n  var {cGroup=32, cMask=63, bCoef=1, xpos=0, ypos=0} = (param||{});\r\n  this.cGroup = cGroup; // v\r\n  this.cMask = cMask; // h\r\n  this.bCoef = bCoef; // m\r\n  this.pos = new Point(xpos, ypos); // a\r\n}\r\n\r\nmodule.exports = DotObject;", "var Point = require(\"./Point\");\r\n\r\nconst minSegmentCurvature = 0.17435839227423353; // ~= 9.99 degrees * pi/180.\r\nconst maxSegmentCurvature = 5.934119456780721; // ~= 340 degrees * pi/180.\r\nconst degreeToRadians = 0.017453292519943295; // ~= pi/180.\r\nconst radiansToDegreeTimes2 = 114.59155902616465; // ~= 360/pi.\r\n\r\nfunction FiniteLinearObject(param) { // E\r\n  var {cGroup=32, cMask=63, bCoef=1, bias=0, p0=null, p1=null} = (param||{});\r\n  this.normal = null; // wa\r\n  this.p1NormalDir = null; // Ig\r\n  this.p0NormalDir = null; // Hg\r\n  this.arcRadius = 0; // Yj\r\n  this.arcCenter = null; // Xd\r\n  this.p0 = p0; // W\r\n  this.p1 = p1; // ca\r\n  this.bias = bias; // Cc\r\n  this.bCoef = bCoef; // m\r\n  this.cMask = cMask; // h\r\n  this.cGroup = cGroup; // v\r\n  this.curveF = Infinity; // vb\r\n}\r\nFiniteLinearObject.prototype = {\r\n  setCurveDegrees: function(curve) { // Oc\r\n    curve *= degreeToRadians;\r\n    if (curve<0) {\r\n      curve = -curve;\r\n      var b = this.p0;\r\n      this.p0 = this.p1;\r\n      this.p1 = b;\r\n      this.bias = -this.bias;\r\n    }\r\n    if (curve>minSegmentCurvature && curve<maxSegmentCurvature)\r\n      this.curveF = 1/Math.tan(curve/2);\r\n  },\r\n  getCurveDegrees: function() { // Co\r\n    return (0==0*this.curveF) ? (radiansToDegreeTimes2*Math.atan(1/this.curveF)) : 0;\r\n  },\r\n  calculateNormals: function() { // he\r\n    if (0==0*this.curveF) {\r\n      var a = this.p1.pos, b = this.p0.pos, c = 0.5*(a.x-b.x), a = 0.5*(a.y-b.y), b = this.p0.pos, d = this.curveF;\r\n      this.arcCenter = new Point(b.x+c-a*d, b.y+a+c*d);\r\n      a = this.p0.pos;\r\n      b = this.arcCenter;\r\n      c = a.x - b.x;\r\n      a = a.y - b.y;\r\n      this.arcRadius = Math.sqrt(c*c+a*a);\r\n      this.p0NormalDir = new Point(-a, c);\r\n      this.p1NormalDir = new Point(this.p1.pos.y-this.arcCenter.y, this.arcCenter.x-this.p1.pos.x);\r\n      if (this.curveF<=0){\r\n        a = c = this.p0NormalDir;\r\n        c.x = -a.x;\r\n        c.y = -a.y;\r\n        a = c = this.p1NormalDir;\r\n        c.x = -a.x;\r\n        c.y = -a.y;\r\n      }\r\n    }\r\n    else {\r\n      a = this.p0.pos;\r\n      b = this.p1.pos;\r\n      c = a.x-b.x;\r\n      a = b.y-a.y;\r\n      b = Math.sqrt(a*a+c*c);\r\n      this.normal = new Point(a/b, c/b);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = FiniteLinearObject;", "var Point = require(\"./Point\");\r\n\r\nfunction InfiniteLinearObject(param) { // L\r\n  var {cGroup=32, cMask=63, bCoef=1, dist=0, xnormal=0, ynormal=0} = (param||{});\r\n  this.cGroup = cGroup; // v\r\n  this.cMask = cMask; // h\r\n  this.bCoef = bCoef; // m\r\n  this.dist = dist; // Ua\r\n  this.normal = new Point(xnormal, ynormal); // wa\r\n}\r\n\r\nmodule.exports = InfiniteLinearObject;", "var Point = require(\"./Point\");\r\n\r\nfunction FiniteLinearSensor(param) { // sb\r\n  var {p0x=0, p0y=0, p1x=0, p1y=0} = (param||{});\r\n  this.p1 = new Point(p1x, p1y); // ca\r\n  this.p0 = new Point(p0x, p0y); // W\r\n}\r\nFiniteLinearSensor.prototype = {\r\n  advance: function(oldPos, newPos) { // C\r\n    var f = this.p0, g = this.p1, k = newPos.x-oldPos.x, l = newPos.y-oldPos.y;\r\n    if (((l*(f.x-oldPos.x)-k*(f.y-oldPos.y))>0 == (l*(g.x-oldPos.x)-k*(g.y-oldPos.y)>0)))\r\n      return false;\r\n    k = g.x-f.x;\r\n    g = g.y-f.y;\r\n    return (g*(oldPos.x-f.x)-k*(oldPos.y-f.y)>0) != (g*(newPos.x-f.x)-k*(newPos.y-f.y)>0);\r\n  }\r\n}\r\n\r\nmodule.exports = FiniteLinearSensor;", "var Point = require(\"./Point\");\r\n\r\nfunction CircularObject(param) { // ua\r\n  var {cGroup=63, cMask=63, damping=0.99, invMass=1, bCoef=0.5, radius=10, xgravity=0, ygravity=0, xspeed=0, yspeed=0, xpos=0, ypos=0} = (param||{});\r\n  this.cGroup = cGroup; // v\r\n  this.cMask = cMask; // h\r\n  this.damping = damping; // Ca\r\n  this.invMass = invMass; // aa\r\n  this.bCoef = bCoef; // m\r\n  this.radius = radius; // Z\r\n  this.gravity = new Point(xgravity, ygravity); // oa\r\n  this.speed = new Point(xspeed, yspeed); // D\r\n  this.pos = new Point(xpos, ypos); // a\r\n}\r\n\r\nmodule.exports = CircularObject;", "function DistanceConstraint(param) { // nb\r\n  var {strength=Infinity, maxLength=100, minLength=100, d1=0, d0=0} = (param||{});\r\n  this.strength = strength; // ne\r\n  this.maxLength = maxLength; // ec\r\n  this.minLength = minLength; // Hb\r\n  this.d1 = d1; // Zd\r\n  this.d0 = d0; // Yd\r\n}\r\n/*\r\nDistanceConstraint.prototype = {\r\n  advance: function(a) { // C\r\n    var b = a[this.d0];\r\n    a = a[this.d1];\r\n    if (!a || !b)\r\n      return;\r\n    var c = b.pos, d = a.pos, e = c.x-d.x, c = c.y-d.y, f = Math.sqrt(e*e+c*c);\r\n    if (f <= 0)\r\n      return;\r\n    e /= f;\r\n    c /= f;\r\n    d = b.invMass/(b.invMass+a.invMass);\r\n    if (isNaN(d)) // (d!=d)\r\n      d = 0.5;\r\n    var g, k;\r\n    if (this.minLength>=this.maxLength) {\r\n      g = this.minLength;\r\n      k = 0;\r\n    }\r\n    else if (f<=this.minLength) {\r\n      g = this.minLength;\r\n      k = 1;\r\n    }\r\n    else if (f>=this.maxLength) {\r\n      g = this.maxLength;\r\n      k = -1;\r\n    }\r\n    else\r\n      return;\r\n    f = g-f;\r\n    if (0 == 0*this.strength){ // !isInfinity(this.strength) && !isNaN(this.strength)\r\n      d = this.strength*f*0.5;\r\n      e *= d;\r\n      c *= d;\r\n      k = d = b.speed;\r\n      b = b.invMass;\r\n      d.x = k.x+e*b;\r\n      d.y = k.y+c*b;\r\n      d = b = a.speed;\r\n      a = a.invMass;\r\n      b.x = d.x-e*a;\r\n      b.y = d.y-c*a;\r\n    }\r\n    else {\r\n      g = f*d;\r\n      var l = b.pos, h = b.pos;\r\n      l.x = h.x+e*g*0.5;\r\n      l.y = h.y+c*g*0.5;\r\n      h = l = a.pos;\r\n      f -= g;\r\n      l.x = h.x-e*f*0.5;\r\n      l.y = h.y-c*f*0.5;\r\n      f = b.speed;\r\n      g = a.speed;\r\n      f = e*(f.x-g.x)+c*(f.y-g.y);\r\n      if (f*k<=0){\r\n        d *= f;\r\n        b = k = b.speed;\r\n        k.x = b.x-e*d;\r\n        k.y = b.y-c*d;\r\n        a = b = a.speed;\r\n        d = f-d;\r\n        b.x = a.x+e*d;\r\n        b.y = a.y+c*d;\r\n      }\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nmodule.exports = DistanceConstraint;", "var CircularObject = require(\"./CircularObject\");\r\n\r\nfunction MoveableCircularObject(param) { // ca\r\n  CircularObject.apply(this, [param]);\r\n}\r\nMoveableCircularObject.prototype = {\r\n  /*\r\n  Pn: function(id1, id2, a, callbacks) {\r\n    var b = this.pos, c = a.pos, d = b.x-c.x, b = b.y-c.y, e = a.radius+this.radius, f = d*d+b*b;\r\n    if (!(f>0 && f<=e*e))\r\n      return;\r\n    var oldA = a; // oldA\r\n    var f = Math.sqrt(f), d = d/f, b = b/f, c = this.invMass/(this.invMass+a.invMass), e = e-f, f = e*c, g = this.pos, k = this.pos;\r\n    g.x = k.x+d*f;\r\n    g.y = k.y+b*f;\r\n    k = g = a.pos;\r\n    e -= f;\r\n    g.x = k.x-d*e;\r\n    g.y = k.y-b*e;\r\n    e = this.speed;\r\n    f = a.speed;\r\n    e = d*(e.x-f.x)+b*(e.y-f.y);\r\n    if (!(e < 0))\r\n      return;\r\n    e *= this.bCoef*a.bCoef+1;\r\n    c *= e;\r\n    g = f = this.speed;\r\n    f.x = g.x-d*c;\r\n    f.y = g.y-b*c;\r\n    a = f = a.speed;\r\n    c = e-c;\r\n    f.x = a.x+d*c;\r\n    f.y = a.y+b*c;\r\n    callbacks._CDD_ && callbacks._CDD_(id1, this.playerId, id2, oldA.playerId);\r\n  },\r\n  Qn: function(a, id1, id2, callbacks) {\r\n    var b, c, d;\r\n    if (0*a.curveF!=0) {\r\n      b = a.p0.pos;\r\n      var e = a.p1.pos;\r\n      c = e.x-b.x;\r\n      var f = e.y-b.y, g = this.pos;\r\n      d = g.x-e.x;\r\n      e = g.y-e.y;\r\n      g = this.pos;\r\n      if (c*(g.x-b.x)+f*(g.y-b.y)<=0 || d*c+e*f>=0)\r\n        return;\r\n      c = a.normal;\r\n      b = c.x;\r\n      c = c.y;\r\n      d = b*d+c*e;\r\n    }\r\n    else {\r\n      c = a.arcCenter;\r\n      d = this.pos;\r\n      b = d.x-c.x;\r\n      c = d.y-c.y;\r\n      d = a.p0NormalDir;\r\n      e = a.p1NormalDir;\r\n      if ((b*d.x+c*d.y>0 && b*e.x+c*e.y>0) == a.curveF<=0)\r\n        return;\r\n      e = Math.sqrt(b*b+c*c);\r\n      if (e==0)\r\n        return;\r\n      d = e-a.arcRadius;\r\n      b /= e;\r\n      c /= e;\r\n    }\r\n    e = a.bias;\r\n    if (e==0){\r\n      if (d<0){\r\n        d = -d;\r\n        b = -b;\r\n        c = -c;\r\n      }\r\n    }\r\n    else if (e<0){\r\n      e = -e;\r\n      d = -d;\r\n      b = -b;\r\n      c = -c;\r\n      if (d<-e)\r\n        return;\r\n    }\r\n    if (this.radius<=d)\r\n      return;\r\n    d = this.radius-d;\r\n    f = e = this.pos;\r\n    e.x = f.x+b*d;\r\n    e.y = f.y+c*d;\r\n    d = this.speed;\r\n    d = b*d.x+c*d.y;\r\n    if (d<0){\r\n      d *= this.bCoef*a.bCoef+1;\r\n      e = a = this.speed;\r\n      a.x = e.x-b*d;\r\n      a.y = e.y-c*d;\r\n      callbacks._CDS_ && callbacks._CDS_(id1, this.playerId, id2); // discId, discPlayerId, segmentId (FIX)\r\n    }\r\n  },\r\n  */\r\n  addVelocity: function(xc, yc){ // xc: dist_x/dist, yc: dist_y/dist\r\n    var h = this.speed;\r\n    h.x += xc;\r\n    h.y += yc;\r\n  },\r\n  applyForce: function(force, xc, yc){ // xc: dist_x/dist, yc: dist_y/dist\r\n    var h = this.speed, l = this.invMass;\r\n    h.x += force*xc*l;\r\n    h.y += force*yc*l;\r\n  },\r\n  isMoving: function(){\r\n    var h = this.speed;\r\n    return h.x*h.x+h.y*h.y>0;\r\n  }\r\n};\r\n\r\nmodule.exports = MoveableCircularObject;", "function World() { // Fa\r\n  this.moveableCircularObjects=[]; // F\r\n  this.dotObjects=[]; // J\r\n  this.infiniteLinearObjects=[]; // qa\r\n  this.finiteLinearObjects=[]; // U\r\n  this.distanceConstraints=[]; // pb\r\n  this.finiteLinearSensors=[]; // tc\r\n}\r\nWorld.prototype = {\r\n  advance: function(time, callbacks) { // C\r\n    for (var b = 0, c = this.moveableCircularObjects; b<c.length; b++) {\r\n      var d = c[b], e = d.pos, f = d.pos, g = d.speed;\r\n      e.x = f.x+time*g.x;\r\n      e.y = f.y+time*g.y;\r\n      f = e = d.speed;\r\n      g = d.gravity;\r\n      d = d.damping;\r\n      e.x = d*(f.x+g.x);\r\n      e.y = d*(f.y+g.y);\r\n    }\r\n    for (var a = 0, b = this.moveableCircularObjects.length; a<b; a++) {\r\n      c = this.moveableCircularObjects[a];\r\n      for (d = a+1; d<b; d++){\r\n        f = this.moveableCircularObjects[d];\r\n        if (!(f.cMask&c.cGroup) || !(f.cGroup&c.cMask))\r\n          continue;\r\n        // ----- c.Pn(a, d, f, callbacks); -----\r\n        var t = c.pos, z = f.pos, x = t.x-z.x, t = t.y-z.y, e = f.radius+c.radius, y = x*x+t*t;\r\n        if (!(y>0 && y<=e*e))\r\n          continue;\r\n        var oldA = f; // oldA\r\n        var y = Math.sqrt(y), x = x/y, t = t/y, z = c.invMass/(c.invMass+f.invMass), e = e-y, y = e*z, g = c.pos, k = c.pos;\r\n        g.x = k.x+x*y;\r\n        g.y = k.y+t*y;\r\n        k = g = f.pos;\r\n        e -= y;\r\n        g.x = k.x-x*e;\r\n        g.y = k.y-t*e;\r\n        e = c.speed;\r\n        y = f.speed;\r\n        e = x*(e.x-y.x)+t*(e.y-y.y);\r\n        if (!(e < 0))\r\n          continue;\r\n        e *= c.bCoef*f.bCoef+1;\r\n        z *= e;\r\n        g = y = c.speed;\r\n        y.x = g.x-x*z;\r\n        y.y = g.y-t*z;\r\n        f = y = f.speed;\r\n        z = e-z;\r\n        y.x = f.x+x*z;\r\n        y.y = f.y+t*z;\r\n        callbacks._CDD_ && callbacks._CDD_(a, c.playerId, d, oldA.playerId);\r\n        // ----- -----\r\n      }\r\n      if (c.invMass==0)\r\n        continue;\r\n      for (d = 0, e = this.infiniteLinearObjects; d<e.length; d++){\r\n        f = e[d];\r\n        if (!(f.cMask&c.cGroup) || !(f.cGroup&c.cMask))\r\n          continue;\r\n        var g = f.normal, k = c.pos, g = f.dist-(g.x*k.x+g.y*k.y)+c.radius; // error??? it looks like it should be c.radius*c.radius at a minimum.\r\n        if (!(g>0))\r\n          continue;\r\n        var l = k = c.pos, h = f.normal;\r\n        k.x = l.x+g*h.x;\r\n        k.y = l.y+g*h.y;\r\n        g = c.speed;\r\n        k = f.normal;\r\n        g = g.x*k.x+g.y*k.y;\r\n        if (!(g<0))\r\n          continue;\r\n        g *= c.bCoef*f.bCoef+1;\r\n        l = k = c.speed;\r\n        f = f.normal;\r\n        k.x = l.x-g*f.x;\r\n        k.y = l.y-g*f.y;\r\n        callbacks._CDP_ && callbacks._CDP_(a, c.playerId, d); // discId, discPlayerId, planeId\r\n      }\r\n      for (d = 0, e = this.finiteLinearObjects; d<e.length; d++){\r\n        f = e[d];\r\n        if (!(f.cMask & c.cGroup) || !(f.cGroup & c.cMask))\r\n          continue;\r\n        // ----- c.Qn(f, a, d, callbacks); -----\r\n        var s, y, z;\r\n        if (0*f.curveF!=0) {\r\n          s = f.p0.pos;\r\n          var t = f.p1.pos;\r\n          y = t.x-s.x;\r\n          var x = t.y-s.y, g = c.pos;\r\n          z = g.x-t.x;\r\n          t = g.y-t.y;\r\n          g = c.pos;\r\n          if (y*(g.x-s.x)+x*(g.y-s.y)<=0 || z*y+t*x>=0)\r\n            continue;\r\n          y = f.normal;\r\n          s = y.x;\r\n          y = y.y;\r\n          z = s*z+y*t;\r\n        }\r\n        else {\r\n          y = f.arcCenter;\r\n          z = c.pos;\r\n          s = z.x-y.x;\r\n          y = z.y-y.y;\r\n          z = f.p0NormalDir;\r\n          t = f.p1NormalDir;\r\n          if ((s*z.x+y*z.y>0 && s*t.x+y*t.y>0) == f.curveF<=0)\r\n            continue;\r\n          t = Math.sqrt(s*s+y*y);\r\n          if (t==0)\r\n            continue;\r\n          z = t-f.arcRadius;\r\n          s /= t;\r\n          y /= t;\r\n        }\r\n        t = f.bias;\r\n        if (t==0){\r\n          if (z<0){\r\n            z = -z;\r\n            s = -s;\r\n            y = -y;\r\n          }\r\n        }\r\n        else if (t<0){\r\n          t = -t;\r\n          z = -z;\r\n          s = -s;\r\n          y = -y;\r\n          if (z<-t)\r\n            continue;\r\n        }\r\n        if (c.radius<=z)\r\n          continue;\r\n        z = c.radius-z;\r\n        x = t = c.pos;\r\n        t.x = x.x+s*z;\r\n        t.y = x.y+y*z;\r\n        z = c.speed;\r\n        z = s*z.x+y*z.y;\r\n        if (z<0){\r\n          z *= c.bCoef*f.bCoef+1;\r\n          t = f = c.speed;\r\n          f.x = t.x-s*z;\r\n          f.y = t.y-y*z;\r\n          callbacks._CDS_ && callbacks._CDS_(a, c.playerId, d); // discId, discPlayerId, segmentId (FIX)\r\n        }\r\n        // ----- -----\r\n      }\r\n      for (d = 0, e = this.dotObjects; d<e.length; d++){\r\n        f = e[d];\r\n        if (!(f.cMask & c.cGroup) || !(f.cGroup & c.cMask))\r\n          continue;\r\n        k = c.pos;\r\n        l = f.pos;\r\n        g = k.x-l.x;\r\n        k = k.y-l.y;\r\n        l = g*g+k*k;\r\n        if (!(l>0 && l<=c.radius*c.radius))\r\n          continue;\r\n        var l = Math.sqrt(l), g = g/l, k = k/l, l = c.radius-l, m = (h = c.pos);\r\n        h.x = m.x+g*l;\r\n        h.y = m.y+k*l;\r\n        l = c.speed;\r\n        l = g*l.x+k*l.y;\r\n        if (!(l<0)){\r\n          callbacks._CDV_ && callbacks._CDV_(a, c.playerId, d, false); // discId, discPlayerId, vertexId, modifiedSpeed (FIX)\r\n          continue;\r\n        }\r\n        l *= c.bCoef*f.bCoef+1;\r\n        h = f = c.speed;\r\n        f.x = h.x-g*l;\r\n        f.y = h.y-k*l;\r\n        callbacks._CDV_ && callbacks._CDV_(a, c.playerId, d, true); // discId, discPlayerId, vertexId, modifiedSpeed (FIX)\r\n      }\r\n    }\r\n    for (a = 0; a<2; a++)\r\n      for (b = 0, c = this.distanceConstraints; b<c.length; b++){\r\n        // ----- c[b].advance(this.moveableCircularObjects); -----\r\n        var t = c[b], x = this.moveableCircularObjects, y = x[t.d0];\r\n        x = x[t.d1];\r\n        if (!x || !y)\r\n          continue;\r\n        var z = y.pos, d = x.pos, e = z.x-d.x, z = z.y-d.y, f = Math.sqrt(e*e+z*z);\r\n        if (f <= 0)\r\n          continue;\r\n        e /= f; // cos\r\n        z /= f; // sin\r\n        d = y.invMass/(y.invMass+x.invMass);\r\n        if (isNaN(d)) // (d!=d)\r\n          d = 0.5;\r\n        var g, k;\r\n        if (t.minLength>=t.maxLength) {\r\n          g = t.minLength;\r\n          k = 0;\r\n        }\r\n        else if (f<=t.minLength) {\r\n          g = t.minLength;\r\n          k = 1;\r\n        }\r\n        else if (f>=t.maxLength) {\r\n          g = t.maxLength;\r\n          k = -1;\r\n        }\r\n        else\r\n          continue;\r\n        f = g-f;\r\n        if (0 == 0*t.strength){ // !isInfinity(t.strength) && !isNaN(t.strength)\r\n          d = t.strength*f*0.5;\r\n          e *= d;\r\n          z *= d;\r\n          k = d = y.speed;\r\n          y = y.invMass;\r\n          d.x = k.x+e*y;\r\n          d.y = k.y+z*y;\r\n          d = y = x.speed;\r\n          x = x.invMass;\r\n          y.x = d.x-e*x;\r\n          y.y = d.y-z*x;\r\n          callbacks._MJ_ && callbacks._MJ_(b, false, true); // jointId, modifiedPosition, modifiedSpeed\r\n        }\r\n        else {\r\n          g = f*d;\r\n          var l = y.pos, h = y.pos;\r\n          l.x = h.x+e*g*0.5;\r\n          l.y = h.y+z*g*0.5;\r\n          h = l = x.pos;\r\n          f -= g;\r\n          l.x = h.x-e*f*0.5;\r\n          l.y = h.y-z*f*0.5;\r\n          f = y.speed;\r\n          g = x.speed;\r\n          f = e*(f.x-g.x)+z*(f.y-g.y);\r\n          var sc = f*k<=0;\r\n          if (sc){\r\n            d *= f;\r\n            y = k = y.speed;\r\n            k.x = y.x-e*d;\r\n            k.y = y.y-z*d;\r\n            x = y = x.speed;\r\n            d = f-d;\r\n            y.x = x.x+e*d;\r\n            y.y = x.y+z*d;\r\n          }\r\n          callbacks._MJ_ && callbacks._MJ_(b, true, sc); // jointId, modifiedPosition, modifiedSpeed\r\n        }\r\n        // ----- -----\r\n      }\r\n  },\r\n  addMoveableCircularObject: function(obj) {\r\n    this.moveableCircularObjects.push(obj);\r\n  },\r\n  removeMoveableCircularObject: function(obj) {\r\n    var idx = this.moveableCircularObjects.indexOf(obj);\r\n    if (idx<0)\r\n      return;\r\n    this.moveableCircularObjects.splice(idx, 1);\r\n  }\r\n}\r\n\r\nmodule.exports = World;", "module.exports = {\r\n  Point: require(\"./Point\"),\r\n  DotObject: require(\"./DotObject\"),\r\n  FiniteLinearObject: require(\"./FiniteLinearObject\"),\r\n  InfiniteLinearObject: require(\"./InfiniteLinearObject\"),\r\n  FiniteLinearSensor: require(\"./FiniteLinearSensor\"),\r\n  CircularObject: require(\"./CircularObject\"),\r\n  DistanceConstraint: require(\"./DistanceConstraint\"),\r\n  MoveableCircularObject: require(\"./MoveableCircularObject\"),\r\n  World: require(\"./World\")\r\n};"],
  "mappings": "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",
  "names": []
}
